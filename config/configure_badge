#!/usr/bin/env bash


#***********************************************#
#		  PiBadge 24			#
#		July 25th 2016			#
#						#
#          A LithoChasm / Toastyguy / 		#
#   Your Name Here if you contribute Production #
#						#
#   	    Defcon 24 / Bsides LV 8		#
#***********************************************#


## Check if being run as root
if [ "$(whoami)" != "root" ]; then
  echo "Error 404, root user not found"
  exit 1
fi


## Check if first run ##
FILE='/etc/badgeConfigured' 
if [ -f $FILE ]; then  		#if file exsists assume badge is configured
  echo -e "\033[0;32m Badge is green, supergreen \033[0m"
  exit 0
else
  echo -e "\033[1;31m Follow the white rabbit. Configuring Badge \033[0m"
fi


## Setup Keyboard ##
echo "* Setting Locale -- Murica. Fuck Yeah."
cp locale.gen /etc/locale.gen

export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
locale-gen en_US.UTF-8
dpkg-reconfigure -f noninteractive locales

cp keyboard /etc/default/keyboard
dpkg-reconfigure -f noninteractive keyboard-configuration

## Setup Network ##
echo "* Setting up the intarwebs"
cp resolv.conf /etc/
if cp interfaces /etc/network; then
    echo "* Network Config Succedded"
else
    echo "! Network Config Failled" 
fi

## Setup SSH
if [ $(systemctl is-active ssh) == "active" ]; then
  echo "* SSH is on"
else
  echo "* Enabling SSH"
  systemctl ssh enable
  systemctl ssh start
fi


## Setup console no blanking
echo "* Disabling console blanking"
echo "consoleblank=0" >> /boot/cmdline.txt

## Setup Boot options
echo "* Setting up boot options"
cp config.txt /boot/

## Setup auto run at boot ##
echo "* Installing Auto Run"
cp rc.local /etc/

## Resize Drive
echo "* Resizing drive, will reboot when finished"

if [ -f $FILE ]; then
  rm /etc/badgeConfigured
fi

##resize

exit 0  ## End cleanly
